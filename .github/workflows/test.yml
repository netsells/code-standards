name: Run tests

on:
    push:
        paths:
            - 'packages/eslint-config/**/**.json'
            - 'packages/eslint-config/**/**.lock'
            - 'packages/eslint-config/**/**.js'
            - 'packages/eslint-config/**/**.vue'
            - 'packages/stylelint-config/**/**.json'
            - 'packages/stylelint-config/**/**.lock'
            - 'packages/stylelint-config/**/**.css'
            - 'packages/stylelint-config/**/**.scss'
    pull_request:
        paths:
            - 'packages/eslint-config/**/**.json'
            - 'packages/eslint-config/**/**.lock'
            - 'packages/eslint-config/**/**.js'
            - 'packages/eslint-config/**/**.vue'
            - 'packages/stylelint-config/**/**.json'
            - 'packages/stylelint-config/**/**.lock'
            - 'packages/stylelint-config/**/**.css'
            - 'packages/stylelint-config/**/**.scss'

jobs:
    build:
        runs-on: [self-hosted, linux]
        steps:
            -   uses: actions/checkout@v2

            -   name: Get yarn cache directory path
                id: yarn-cache-dir-path
                run: echo "::set-output name=dir::$(yarn cache dir)"

            -   name: Setup yarn cache
                uses: actions/cache@v1
                id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
                with:
                    path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-yarn-

            -   name: Install dependencies
                run: yarn

            -   name: Setup lerna modules
                run: yarn lerna bootstrap

            -   name: Run tests
                run: yarn test
