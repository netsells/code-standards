(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{237:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"linting-static-analysis-rules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linting-static-analysis-rules","aria-hidden":"true"}},[t._v("#")]),t._v(" Linting & Static Analysis Rules")]),t._v(" "),s("p",[t._v("We use linting and analysis tools to enforce code style and best practices. Our project "),s("a",{attrs:{href:"https://github.com/netsells/flutter-templates",target:"_blank",rel:"noopener noreferrer"}},[t._v("templates"),s("OutboundLink")],1),t._v(" are all set up with these rules out-of-the-box, but if you need to set it up manually, here's a reference.")]),t._v(" "),s("p",[t._v("The following rules require the "),s("a",{attrs:{href:"https://pub.dev/packages/very_good_analysis",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("very_good_analysis")]),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://pub.dev/packages/dart_code_metrics",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("dart_code_metrics")]),s("OutboundLink")],1),t._v(" packages.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("include")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" package"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("very_good_analysis/analysis_options.yaml\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("analyzer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("plugins")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" dart_code_metrics\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exclude")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ios/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" android/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" macos/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" web/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" lib/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**.*.dart")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**.*.dart")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dart_code_metrics")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("anti-patterns")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" long"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("method\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" long"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("list\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metrics")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cyclomatic-complexity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maximum-nesting-level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("number-of-parameters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source-lines-of-code")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metrics-exclude")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" avoid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("unused"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("parameters\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" binary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("operand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("order\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" double"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("literal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("format\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("declaration\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" newline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("before"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("return\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("boolean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("literal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compare\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" prefer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("comma\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" prefer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("conditional"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("expressions\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("equal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("then"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("else\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" always"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("remove"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("listener\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" avoid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("returning"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("widgets\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" avoid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("unnecessary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("setstate\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" avoid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("wrapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("padding\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" prefer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("extracting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("callbacks\n")])])])])},[],!1,null,null,null);a.default=e.exports}}]);