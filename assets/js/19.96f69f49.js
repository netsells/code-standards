(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{221:function(e,t,r){"use strict";r.r(t);var s=r(0),n=Object(s.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"testing"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#testing","aria-hidden":"true"}},[e._v("#")]),e._v(" Testing")]),e._v(" "),r("p",[e._v("The "),r("router-link",{attrs:{to:"/android/clean-architecture.html"}},[e._v("Clean Architecture")]),e._v(" makes the project highly testable. Consider using a test-driven development workflow when implementing features.")],1),e._v(" "),r("p",[e._v("You'll probably want to make use of "),r("a",{attrs:{href:"https://developer.android.com/topic/libraries/testing-support-library",target:"_blank",rel:"noopener noreferrer"}},[e._v("AndroidX Test"),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"http://robolectric.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Robolectric"),r("OutboundLink")],1),e._v(", and "),r("a",{attrs:{href:"https://site.mockito.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mockito"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"types-of-test"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#types-of-test","aria-hidden":"true"}},[e._v("#")]),e._v(" Types of Test")]),e._v(" "),r("ul",[r("li",[r("p",[r("em",[e._v("Local tests")]),e._v(" can be run on any machine with a JVM, including your computer and a continuous integration server")])]),e._v(" "),r("li",[r("p",[r("em",[e._v("Instrumentation tests")]),e._v(" must be run on a real or emulated Android device")])]),e._v(" "),r("li",[r("p",[r("em",[e._v("Unit tests")]),e._v(" test individual classes in isolation, using mocked versions of dependencies")])]),e._v(" "),r("li",[r("p",[r("em",[e._v("Integration tests")]),e._v(" test the entire system as a whole using real dependencies")])])]),e._v(" "),r("h2",{attrs:{id:"requirements"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#requirements","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),r("p",[e._v("When reviewing pull requests, please follow these requirements.")]),e._v(" "),r("p",[r("strong",[e._v("Pull Requests must not be merged with failing tests.")])]),e._v(" "),r("h3",{attrs:{id:"new-projects"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new-projects","aria-hidden":"true"}},[e._v("#")]),e._v(" New Projects")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("MUST")]),e._v(" include "),r("em",[e._v("local unit tests")]),e._v(" for everything in the "),r("code",[e._v("data")]),e._v(" and "),r("code",[e._v("domain")]),e._v(" layers, as well as state management components such as "),r("code",[e._v("ViewModel")]),e._v("s.")]),e._v(" "),r("li",[r("strong",[e._v("SHOULD")]),e._v(" include "),r("em",[e._v("local unit tests")]),e._v(" for Fragments and Activities, provided the tests aren't too time-consuming to write.\n"),r("ul",[r("li",[e._v("You "),r("strong",[e._v("MUST")]),e._v(" use Robolectric when writing these tests, so that emulators/devices are not required.")])])]),e._v(" "),r("li",[r("strong",[e._v("CONSIDER")]),e._v(" including "),r("em",[e._v("local integration tests")]),e._v(" which test the entire feature against mocked external dependencies (e.g. a mocked web server).\n"),r("ul",[r("li",[e._v("Use your judgement to decide whether this is worth the time you might spend.")])])]),e._v(" "),r("li",[r("strong",[e._v("SHOULD NOT")]),e._v(" include "),r("em",[e._v("instrumented tests")]),e._v(". These have limited usefulness and take a very long time to write. "),r("strong",[e._v("PREFER")]),e._v(" manual integration testing.")])]),e._v(" "),r("h3",{attrs:{id:"legacy-projects"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#legacy-projects","aria-hidden":"true"}},[e._v("#")]),e._v(" Legacy Projects")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("CONSIDER")]),e._v(" include unit tests for new functionality as above, wherever possible\n"),r("ul",[r("li",[e._v("Make a judgement call here. If the codebase is super untestable, it may not be worth the hassle.")])])])]),e._v(" "),r("h2",{attrs:{id:"how-do-i-know-what-to-test"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#how-do-i-know-what-to-test","aria-hidden":"true"}},[e._v("#")]),e._v(" How do I know what to test?")]),e._v(" "),r("p",[e._v("As mentioned above, the "),r("router-link",{attrs:{to:"/android/clean-architecture.html"}},[e._v("Clean Architecture")]),e._v(" makes the project highly testable. It's pretty clear that you can test each component of the Clean Architecture, and what you should be testing.")],1),e._v(" "),r("p",[e._v("If you're unsure, think about the concept of "),r("strong",[e._v("mutation testing")]),e._v(". If you deliberately introduce a random bug, like removing a line of code or replacing a "),r("code",[e._v("<")]),e._v(" with a "),r("code",[e._v(">")]),e._v(", will your test fail? If not, it's not doing the job it's designed for, so you should update the test to catch that bug. Remember, "),r("strong",[e._v("tests exist to catch mistakes made by developers")]),e._v(", so make sure you account for every possible mistake.")])])},[],!1,null,null,null);t.default=n.exports}}]);