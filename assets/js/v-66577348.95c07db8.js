"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8743],{2825:(n,s,a)=>{a.r(s),a.d(s,{default:()=>f});var e=a(6252);const t=(0,e._)("h1",{id:"linting-static-analysis-rules",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#linting-static-analysis-rules","aria-hidden":"true"},"#"),(0,e.Uk)(" Linting & Static Analysis Rules")],-1),p=(0,e.Uk)("We use linting and analysis tools to enforce code style and best practices. Our project "),l={href:"https://github.com/netsells/flutter-templates",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("templates"),u=(0,e.Uk)(" are all set up with these rules out-of-the-box, but if you need to set it up manually, here's a reference."),o=(0,e.Uk)("The following rules require the "),r={href:"https://pub.dev/packages/very_good_analysis",target:"_blank",rel:"noopener noreferrer"},i=(0,e._)("code",null,"very_good_analysis",-1),k=(0,e.Uk)(" and "),b={href:"https://pub.dev/packages/dart_code_metrics",target:"_blank",rel:"noopener noreferrer"},m=(0,e._)("code",null,"dart_code_metrics",-1),d=(0,e.Uk)(" packages."),y=(0,e.uE)('<div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">include</span><span class="token punctuation">:</span> package<span class="token punctuation">:</span>very_good_analysis/analysis_options.yaml\n\n<span class="token key atrule">analyzer</span><span class="token punctuation">:</span>\n  <span class="token key atrule">plugins</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> dart_code_metrics\n  <span class="token key atrule">exclude</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> ios/<span class="token important">**</span>\n    <span class="token punctuation">-</span> android/<span class="token important">**</span>\n    <span class="token punctuation">-</span> macos/<span class="token important">**</span>\n    <span class="token punctuation">-</span> web/<span class="token important">**</span>\n    <span class="token punctuation">-</span> lib/<span class="token important">**.*.dart</span>\n    <span class="token punctuation">-</span> test/<span class="token important">**.*.dart</span>\n\n<span class="token key atrule">dart_code_metrics</span><span class="token punctuation">:</span>\n  <span class="token key atrule">anti-patterns</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> long<span class="token punctuation">-</span>method\n    <span class="token punctuation">-</span> long<span class="token punctuation">-</span>parameter<span class="token punctuation">-</span>list\n  <span class="token key atrule">metrics</span><span class="token punctuation">:</span>\n    <span class="token key atrule">cyclomatic-complexity</span><span class="token punctuation">:</span> <span class="token number">20</span>\n    <span class="token key atrule">maximum-nesting-level</span><span class="token punctuation">:</span> <span class="token number">5</span>\n    <span class="token key atrule">number-of-parameters</span><span class="token punctuation">:</span> <span class="token number">4</span>\n    <span class="token key atrule">source-lines-of-code</span><span class="token punctuation">:</span> <span class="token number">50</span>\n  <span class="token key atrule">metrics-exclude</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> test/<span class="token important">**</span>\n  <span class="token key atrule">rules</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> avoid<span class="token punctuation">-</span>unused<span class="token punctuation">-</span>parameters\n    <span class="token punctuation">-</span> binary<span class="token punctuation">-</span>expression<span class="token punctuation">-</span>operand<span class="token punctuation">-</span>order\n    <span class="token punctuation">-</span> double<span class="token punctuation">-</span>literal<span class="token punctuation">-</span>format\n    <span class="token punctuation">-</span> no<span class="token punctuation">-</span>object<span class="token punctuation">-</span>declaration\n    <span class="token punctuation">-</span> newline<span class="token punctuation">-</span>before<span class="token punctuation">-</span>return\n    <span class="token punctuation">-</span> no<span class="token punctuation">-</span>boolean<span class="token punctuation">-</span>literal<span class="token punctuation">-</span>compare\n    <span class="token punctuation">-</span> prefer<span class="token punctuation">-</span>trailing<span class="token punctuation">-</span>comma\n    <span class="token punctuation">-</span> prefer<span class="token punctuation">-</span>conditional<span class="token punctuation">-</span>expressions\n    <span class="token punctuation">-</span> no<span class="token punctuation">-</span>equal<span class="token punctuation">-</span>then<span class="token punctuation">-</span>else\n    <span class="token punctuation">-</span> always<span class="token punctuation">-</span>remove<span class="token punctuation">-</span>listener\n    <span class="token punctuation">-</span> avoid<span class="token punctuation">-</span>returning<span class="token punctuation">-</span>widgets\n    <span class="token punctuation">-</span> avoid<span class="token punctuation">-</span>unnecessary<span class="token punctuation">-</span>setstate\n    <span class="token punctuation">-</span> avoid<span class="token punctuation">-</span>wrapping<span class="token punctuation">-</span>in<span class="token punctuation">-</span>padding\n    <span class="token punctuation">-</span> prefer<span class="token punctuation">-</span>extracting<span class="token punctuation">-</span>callbacks\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div>',1),g={},f=(0,a(3744).Z)(g,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[p,(0,e._)("a",l,[c,(0,e.Wm)(a)]),u]),(0,e._)("p",null,[o,(0,e._)("a",r,[i,(0,e.Wm)(a)]),k,(0,e._)("a",b,[m,(0,e.Wm)(a)]),d]),y],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}},8858:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-66577348",path:"/flutter/linting-rules.html",title:"Linting & Static Analysis Rules",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"flutter/linting-rules.md",git:{updatedTime:1635333043e3,contributors:[{name:"Sam Turrell",email:"sam.turrell@netsells.co.uk",commits:1}]}}}}]);