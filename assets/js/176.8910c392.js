(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{376:function(t,n,a){"use strict";a.r(n);var e=a(0),s=Object(e.a)({},function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ðŸ‘®-linting-rules-enforcement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ðŸ‘®-linting-rules-enforcement","aria-hidden":"true"}},[t._v("#")]),t._v(" ðŸ‘® Linting Rules & Enforcement")]),t._v(" "),a("h2",{attrs:{id:"intro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intro","aria-hidden":"true"}},[t._v("#")]),t._v(" Intro")]),t._v(" "),a("p",[t._v("We use SwiftLint to analyse our code and enforce the standards below. We discuss all standard changes or additions in the #team-mobile slack channel. Once a rule has been decided, it will be added here and added to the standard .swiftlint.yml file on confluence. You will need to add this to any projects you want to update")]),t._v(" "),a("h2",{attrs:{id:"rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rules","aria-hidden":"true"}},[t._v("#")]),t._v(" Rules")]),t._v(" "),a("h3",{attrs:{id:"control-statements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#control-statements","aria-hidden":"true"}},[t._v("#")]),t._v(" Control Statements")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://realm.github.io/SwiftLint/control_statement.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link to Swiftlint doc"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Control statements shouldnâ€™t unnecessarily wrap their conditionals or arguments in parentheses.")]),t._v(" "),a("p",[a("strong",[t._v("Non-Triggering Example")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" condition "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Triggering Example")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},[],!1,null,null,null);n.default=s.exports}}]);