"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9215],{7261:(e,a,t)=>{t.r(a),t.d(a,{default:()=>s});const r=(0,t(6252).uE)('<h2 id="what-to-test" tabindex="-1"><a class="header-anchor" href="#what-to-test" aria-hidden="true">#</a> What to test?</h2><h3 id="key-components-render" tabindex="-1"><a class="header-anchor" href="#key-components-render" aria-hidden="true">#</a> Key components render</h3><h3 id="dynamic-classes-are-applied" tabindex="-1"><a class="header-anchor" href="#dynamic-classes-are-applied" aria-hidden="true">#</a> Dynamic classes are applied</h3><h3 id="actions-api-endpoints-are-called-with-the-correct-data" tabindex="-1"><a class="header-anchor" href="#actions-api-endpoints-are-called-with-the-correct-data" aria-hidden="true">#</a> Actions/api endpoints are called (with the correct data)</h3><h3 id="errors-are-handled-correctly" tabindex="-1"><a class="header-anchor" href="#errors-are-handled-correctly" aria-hidden="true">#</a> Errors are handled correctly</h3><h3 id="asyncdata" tabindex="-1"><a class="header-anchor" href="#asyncdata" aria-hidden="true">#</a> asyncData</h3><h2 id="what-not-to-test" tabindex="-1"><a class="header-anchor" href="#what-not-to-test" aria-hidden="true">#</a> What not to test</h2><h3 id="component-methods-are-called" tabindex="-1"><a class="header-anchor" href="#component-methods-are-called" aria-hidden="true">#</a> Component methods are called</h3><h3 id="third-party-package-code" tabindex="-1"><a class="header-anchor" href="#third-party-package-code" aria-hidden="true">#</a> Third party package code</h3><h3 id="static-data" tabindex="-1"><a class="header-anchor" href="#static-data" aria-hidden="true">#</a> Static data</h3><h3 id="static-props" tabindex="-1"><a class="header-anchor" href="#static-props" aria-hidden="true">#</a> Static props</h3><h2 id="how-to-test" tabindex="-1"><a class="header-anchor" href="#how-to-test" aria-hidden="true">#</a> How to test</h2><h3 id="keep-assertions-fixed-where-possible" tabindex="-1"><a class="header-anchor" href="#keep-assertions-fixed-where-possible" aria-hidden="true">#</a> Keep assertions fixed where possible</h3>',13),d={},s=(0,t(3744).Z)(d,[["render",function(e,a){return r}]])},3744:(e,a)=>{a.Z=(e,a)=>{for(const[t,r]of a)e[t]=r;return e}},4905:(e,a,t)=>{t.r(a),t.d(a,{data:()=>r});const r={key:"v-64f437db",path:"/frontend/testing/what-to-test.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"What to test?",slug:"what-to-test",children:[{level:3,title:"Key components render",slug:"key-components-render",children:[]},{level:3,title:"Dynamic classes are applied",slug:"dynamic-classes-are-applied",children:[]},{level:3,title:"Actions/api endpoints are called (with the correct data)",slug:"actions-api-endpoints-are-called-with-the-correct-data",children:[]},{level:3,title:"Errors are handled correctly",slug:"errors-are-handled-correctly",children:[]},{level:3,title:"asyncData",slug:"asyncdata",children:[]}]},{level:2,title:"What not to test",slug:"what-not-to-test",children:[{level:3,title:"Component methods are called",slug:"component-methods-are-called",children:[]},{level:3,title:"Third party package code",slug:"third-party-package-code",children:[]},{level:3,title:"Static data",slug:"static-data",children:[]},{level:3,title:"Static props",slug:"static-props",children:[]}]},{level:2,title:"How to test",slug:"how-to-test",children:[{level:3,title:"Keep assertions fixed where possible",slug:"keep-assertions-fixed-where-possible",children:[]}]}],filePathRelative:"frontend/testing/what-to-test.md",git:{updatedTime:1661331543e3,contributors:[{name:"Sam Turrell",email:"sam.turrell@netsells.co.uk",commits:1}]}}}}]);