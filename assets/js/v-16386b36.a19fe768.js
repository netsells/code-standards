"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4170],{7490:(e,n,t)=>{t.r(n),t.d(n,{default:()=>u});var r=t(6252);const o=(0,r._)("h1",{id:"coroutines",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#coroutines","aria-hidden":"true"},"#"),(0,r.Uk)(" Coroutines")],-1),s=(0,r._)("p",null,"Use of Kotlin coroutines is strongly recommended for asynchronous tasks like network requests.",-1),a=(0,r._)("p",null,[(0,r.Uk)("When invoking async tasks from the presentation layer, rather than using callbacks consider returning a "),(0,r._)("code",null,"Job"),(0,r.Uk)(" from your use cases. Then the presentation layer can react to the result using "),(0,r._)("code",null,"invokeOnCompletion"),(0,r.Uk)(".")],-1),i={},u=(0,t(3744).Z)(i,[["render",function(e,n){return(0,r.wg)(),(0,r.iD)(r.HY,null,[o,s,a],64)}]])},3744:(e,n)=>{n.Z=(e,n)=>{for(const[t,r]of n)e[t]=r;return e}},6710:(e,n,t)=>{t.r(n),t.d(n,{data:()=>r});const r={key:"v-16386b36",path:"/android/coroutines.html",title:"Coroutines",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"android/coroutines.md",git:{updatedTime:1648636736e3,contributors:[{name:"Peter Bryant",email:"peter.bryant@netsells.co.uk",commits:1}]}}}}]);