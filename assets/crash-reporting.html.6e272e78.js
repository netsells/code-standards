import{_ as e,r as p,o,c,a as s,b as n,d as t,e as i}from"./app.e847509f.js";const l={},u=s("h1",{id:"crash-reporting",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#crash-reporting","aria-hidden":"true"},"#"),n(" Crash Reporting")],-1),r={href:"https://sentry.io/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/netsells/mobile-templates",target:"_blank",rel:"noopener noreferrer"},d=i(`<div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">runZonedGuarded</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
    <span class="token class-name">WidgetsFlutterBinding</span><span class="token punctuation">.</span><span class="token function">ensureInitialized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>kReleaseMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">final</span> pInfo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">PackageInfo</span><span class="token punctuation">.</span><span class="token function">fromPlatform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token class-name">SentryFlutter</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> options
        <span class="token punctuation">.</span><span class="token punctuation">.</span>dsn <span class="token operator">=</span> sentryDsn
        <span class="token punctuation">.</span><span class="token punctuation">.</span>environment <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;staging&#39;</span></span> <span class="token comment">// or production</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span>release <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">pInfo<span class="token punctuation">.</span>version</span><span class="token punctuation">}</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">pInfo<span class="token punctuation">.</span>buildNumber</span><span class="token punctuation">}</span></span><span class="token string">)&#39;</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// Initialize and run the app</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>error<span class="token punctuation">,</span> stack<span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>kReleaseMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token class-name">Sentry</span><span class="token punctuation">.</span><span class="token function">captureException</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> stackTrace<span class="token punctuation">:</span> stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function v(m,b){const a=p("ExternalLinkIcon");return o(),c("div",null,[u,s("p",null,[n("All Flutter apps should be set up to report crashes to our crash logging infrastructure. We currently use "),s("a",r,[n("Sentry"),t(a)]),n(".")]),s("p",null,[n("Our "),s("a",k,[n("project template"),t(a)]),n(" is set up to automatically add Sentry logging. Below is a setup snippet for reference.")]),d])}const g=e(l,[["render",v],["__file","crash-reporting.html.vue"]]);export{g as default};
