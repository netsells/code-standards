{"remainingRequest":"/Users/Sam/www/web/code-standards/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/Sam/www/web/code-standards/node_modules/vuepress/lib/app/dataMixin.js","dependencies":[{"path":"/Users/Sam/www/web/code-standards/node_modules/vuepress/lib/app/dataMixin.js","mtime":1524500204000},{"path":"/Users/Sam/www/web/code-standards/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/Sam/www/web/code-standards/node_modules/babel-loader/lib/index.js","mtime":1526583314000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.object.freeze\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport Vue from 'vue';\nimport { siteData } from './.temp/siteData';\nimport { findPageForPath } from './util';\n\nfunction prepare(siteData) {\n  siteData.pages.forEach(function (page) {\n    if (!page.frontmatter) {\n      page.frontmatter = {};\n    }\n  });\n\n  if (siteData.locales) {\n    Object.keys(siteData.locales).forEach(function (path) {\n      siteData.locales[path].path = path;\n    });\n  }\n\n  Object.freeze(siteData);\n}\n\nprepare(siteData);\nvar store = new Vue({\n  data: {\n    siteData: siteData\n  }\n});\n\nif (module.hot) {\n  module.hot.accept('./.temp/siteData', function () {\n    prepare(siteData);\n    store.siteData = siteData;\n  });\n}\n\nexport default {\n  computed: {\n    $site: function $site() {\n      return store.siteData;\n    },\n    $localeConfig: function $localeConfig() {\n      var _this$$site$locales = this.$site.locales,\n          locales = _this$$site$locales === void 0 ? {} : _this$$site$locales;\n      var targetLang;\n      var defaultLang;\n\n      for (var path in locales) {\n        if (path === '/') {\n          defaultLang = locales[path];\n        } else if (this.$page.path.indexOf(path) === 0) {\n          targetLang = locales[path];\n        }\n      }\n\n      return targetLang || defaultLang || {};\n    },\n    $siteTitle: function $siteTitle() {\n      return this.$localeConfig.title || this.$site.title || '';\n    },\n    $title: function $title() {\n      var page = this.$page;\n      var siteTitle = this.$siteTitle;\n      var selfTitle = page.frontmatter.home ? null : page.frontmatter.title || // explicit title\n      page.title // inferred title\n      ;\n      return siteTitle ? selfTitle ? siteTitle + ' | ' + selfTitle : siteTitle : selfTitle || 'VuePress';\n    },\n    $description: function $description() {\n      return this.$page.frontmatter.description || this.$localeConfig.description || this.$site.description || '';\n    },\n    $lang: function $lang() {\n      return this.$page.frontmatter.lang || this.$localeConfig.lang || 'en-US';\n    },\n    $localePath: function $localePath() {\n      return this.$localeConfig.path || '/';\n    },\n    $themeLocaleConfig: function $themeLocaleConfig() {\n      return (this.$site.themeConfig.locales || {})[this.$localePath] || {};\n    },\n    $page: function $page() {\n      return findPageForPath(this.$site.pages, this.$route.path);\n    }\n  }\n};",null]}