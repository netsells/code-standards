{"remainingRequest":"/Users/Sam/www/web/code-standards/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Sam/www/web/code-standards/node_modules/vuepress/lib/default-theme/Page.vue?vue&type=style&index=0&lang=stylus","dependencies":[{"path":"/Users/Sam/www/web/code-standards/node_modules/vuepress/lib/default-theme/Page.vue","mtime":1527265985000},{"path":"/Users/Sam/www/web/code-standards/node_modules/css-loader/locals.js","mtime":0},{"path":"/Users/Sam/www/web/code-standards/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1521907989000},{"path":"/Users/Sam/www/web/code-standards/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Sam/www/web/code-standards/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/Sam/www/web/code-standards/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/Sam/www/web/code-standards/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import './styles/config.styl'\n\n.page\n  padding-bottom 2rem\n\n.edit-link.content\n  padding-top 0 !important\n  a\n    color lighten($textColor, 25%)\n    margin-right 0.25rem\n  .last-updated\n    margin-top: 0 !important\n    margin-bottom .5rem\n    float right\n    font-weight 500\n    font-size .9em\n    .prefix\n      color lighten($textColor, 25%)\n    .time\n      color #aaa\n\n.page-nav.content\n  padding-top 1rem !important\n  padding-bottom 0 !important\n  .inner\n    min-height 2rem\n    margin-top 0 !important\n    border-top 1px solid $borderColor\n    padding-top 1rem\n    overflow auto // clear float\n  .next\n    float right\n\n@media (max-width: $MQMobile)\n  .edit-link.content .last-updated\n    float none\n    text-align left\n    margin-top 1rem\n    font-size .8em\n\n",{"version":3,"sources":["Page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Page.vue","sourceRoot":"node_modules/vuepress/lib/default-theme","sourcesContent":["<template>\n  <div class=\"page\">\n    <Content :custom=\"false\"/>\n    <div class=\"content edit-link\">\n      <template v-if=\"editLink\">\n        <a :href=\"editLink\" target=\"_blank\" rel=\"noopener noreferrer\">{{ editLinkText }}</a>\n        <OutboundLink/>\n      </template>\n      <div v-if=\"lastUpdated\" class=\"last-updated\">\n        <span class=\"prefix\">{{ lastUpdatedText }}: </span>\n        <span class=\"time\">{{ lastUpdated }}</span>\n      </div>\n    </div>\n    <div class=\"content page-nav\" v-if=\"prev || next\">\n      <p class=\"inner\">\n        <span v-if=\"prev\" class=\"prev\">\n          ← <router-link v-if=\"prev\" class=\"prev\" :to=\"prev.path\">\n            {{ prev.title || prev.path }}\n          </router-link>\n        </span>\n        <span v-if=\"next\" class=\"next\">\n          <router-link v-if=\"next\" :to=\"next.path\">\n            {{ next.title || next.path }}\n          </router-link> →\n        </span>\n      </p>\n    </div>\n    <slot name=\"bottom\"/>\n  </div>\n</template>\n\n<script>\nimport { resolvePage, normalize, outboundRE, endingSlashRE } from './util'\n\nexport default {\n  props: ['sidebarItems'],\n  computed: {\n    lastUpdated () {\n      if (this.$page.lastUpdated) {\n        return new Date(this.$page.lastUpdated).toLocaleString(this.$lang)\n      }\n    },\n    lastUpdatedText () {\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\n        return this.$themeLocaleConfig.lastUpdated\n      }\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\n        return this.$site.themeConfig.lastUpdated\n      }\n      return 'Last Updated'\n    },\n    prev () {\n      const prev = this.$page.frontmatter.prev\n      if (prev === false) {\n        return\n      } else if (prev) {\n        return resolvePage(this.$site.pages, prev, this.$route.path)\n      } else {\n        return resolvePrev(this.$page, this.sidebarItems)\n      }\n    },\n    next () {\n      const next = this.$page.frontmatter.next\n      if (next === false) {\n        return\n      } else if (next) {\n        return resolvePage(this.$site.pages, next, this.$route.path)\n      } else {\n        return resolveNext(this.$page, this.sidebarItems)\n      }\n    },\n    editLink () {\n      if (this.$page.frontmatter.editLink === false) {\n        return\n      }\n      const {\n        repo,\n        editLinks,\n        docsDir = '',\n        docsBranch = 'master',\n        docsRepo = repo\n      } = this.$site.themeConfig\n\n      let path = normalize(this.$page.path)\n      if (endingSlashRE.test(path)) {\n        path += 'README.md'\n      } else {\n        path += '.md'\n      }\n\n      if (docsRepo && editLinks) {\n        const base = outboundRE.test(docsRepo)\n          ? docsRepo\n          : `https://github.com/${docsRepo}`\n        return (\n          base.replace(endingSlashRE, '') +\n          `/edit/${docsBranch}` +\n          (docsDir ? '/' + docsDir.replace(endingSlashRE, '') : '') +\n          path\n        )\n      }\n    },\n    editLinkText () {\n      return (\n        this.$themeLocaleConfig.editLinkText ||\n        this.$site.themeConfig.editLinkText ||\n        `Edit this page`\n      )\n    }\n  }\n}\n\nfunction resolvePrev (page, items) {\n  return find(page, items, -1)\n}\n\nfunction resolveNext (page, items) {\n  return find(page, items, 1)\n}\n\nfunction find (page, items, offset) {\n  const res = []\n  items.forEach(item => {\n    if (item.type === 'group') {\n      res.push(...item.children || [])\n    } else {\n      res.push(item)\n    }\n  })\n  for (let i = 0; i < res.length; i++) {\n    const cur = res[i]\n    if (cur.type === 'page' && cur.path === page.path) {\n      return res[i + offset]\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n@import './styles/config.styl'\n\n.page\n  padding-bottom 2rem\n\n.edit-link.content\n  padding-top 0 !important\n  a\n    color lighten($textColor, 25%)\n    margin-right 0.25rem\n  .last-updated\n    margin-top: 0 !important\n    margin-bottom .5rem\n    float right\n    font-weight 500\n    font-size .9em\n    .prefix\n      color lighten($textColor, 25%)\n    .time\n      color #aaa\n\n.page-nav.content\n  padding-top 1rem !important\n  padding-bottom 0 !important\n  .inner\n    min-height 2rem\n    margin-top 0 !important\n    border-top 1px solid $borderColor\n    padding-top 1rem\n    overflow auto // clear float\n  .next\n    float right\n\n@media (max-width: $MQMobile)\n  .edit-link.content .last-updated\n    float none\n    text-align left\n    margin-top 1rem\n    font-size .8em\n\n</style>\n"]}]}